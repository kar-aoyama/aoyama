server:
  port: 7999

spring:
  application:
    name: workflow
  cloud:
    nacos:
      discovery:
        server-addr: 81.68.170.150:8848
        namespace: 82477b99-89cf-4a17-9164-97f65da64e8f
        group: ${spring.profiles.active}
  datasource:
    username: root
    password: lzl0502
    driver-class-name: com.mysql.cj.jdbc.Driver
    #加上 nullCatalogMeansCurrent=true 帮忙创建activiti 表结构
    url: "jdbc:mysql://81.68.170.150:3306/aoyama_workflow?useUnicode=true&characterEncoding=UTF8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&nullCatalogMeansCurrent=true"
  activiti:
    #flase： 默认值。activiti在启动时，会对比数据库表中保存的版本，如果没有表或者版本不匹配，将抛出异常。
    #true： activiti会对数据库中所有表进行更新操作。如果表不存在，则自动创建。
    #create_drop： 在activiti启动时创建表，在关闭时删除表（必须手动关闭引擎，才能删除表）。
    #drop-create： 在activiti启动时删除原来的旧表，然后在创建新表（不需要手动关闭引擎）
    database-schema-update: true
    # 自动部署验证设置:true-开启（默认）、false-关闭
    check-process-definitions: true # 校验流程文件，默认校验resources下的processes文件夹里的流程文件
    process-definition-location-prefix: classpath:/processes/
    history-level: full #记录历史等级 可配置的历史级别有none, acitivity, audit, all
    #db-history-used: true
    #db-identity-used: false
feign:
  httpclient:
    enabled: true

security:
  oauth2:
    client:
      client-id: app
      client-secret: app
      access-token-uri: "http://127.0.0.1:8086/oauth/token"
      user-authorization-uri: "http://127.0.0.1:8086/oauth/authorize"
    resource:
      jwt:
        #(如果使用JWT，可以获的公钥用于 token 的验签)
        key-uri: "http://127.0.0.1:8086/oauth/token_key"

#配置分布式事务
seata:
  enabled: true
  application-id: ${spring.application.name}
  # 事务分组
  tx-service-group: aoyama
  #开启数据库代理
  enable-auto-data-source-proxy: true
  # 配置服务
  config:
    type: nacos
    nacos:
      group: SEATA_GROUP
      server-addr: ${spring.cloud.nacos.discovery.server-addr}
      namespace: ${spring.cloud.nacos.discovery.namespace}
  registry:
    type: nacos
    nacos:
      server-addr: ${spring.cloud.nacos.discovery.server-addr}
      namespace: ${spring.cloud.nacos.discovery.namespace}